[package]
name = "homotopy-web"
description = "Web frontend for homotopy.io"
version = "0.1.0"
authors = ["Lukas Heidemann <lukas@heidemann.me>", "Nick Hu <me@nickhu.co.uk>"]
categories = ["wasm"]
readme = "README.md"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
hashconsing = "*"
homotopy-core = { path = "../homotopy-core" }
homotopy-graphics = { path = "../homotopy-graphics" }
closure = "0.3"
js-sys = "*"
quote = "1.0.7"
serde = { version = "1.0", features = ["derive"] }
rmp-serde = { features = ["serde128"], version = "*" } # u128 support is new
syn = "1.0.45"
# yew = "0.17"
yew = { git = "https://github.com/yewstack/yew" }
yew-services = { git = "https://github.com/yewstack/yew" }
yew-functional = { git = "https://github.com/yewstack/yew" } # yew-functional not released yet
yewtil = { git = "https://github.com/yewstack/yew" }

# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = { version = "0.2.45", features = ["serde-serialize"] }

wasm-logger = "*"
log = "*"
euclid = "*"
lyon_path = "*"
thiserror = "*"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "*", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "*", optional = true }
im = { version = "*", features = ["serde"] }
arrayvec = "0.5"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.22"
features = [
  "console",
  "Element",
  "DomRect",
  "Document",
  "HtmlHeadElement",
  "Window",
  "TouchEvent",
  "TouchList",
  "Touch",
  "Performance",
  "EventTarget",
  "KeyboardEvent",
  "EventListener",
]

# These crates are used for running unit tests.
[dev-dependencies]
cargo-husky = { features = ["precommit-hook", "run-cargo-check", "run-cargo-test", "run-cargo-fmt", "run-cargo-clippy"], version = "*" }
wasm-bindgen-test = "0.2.45"
futures = "0.1.27"
wasm-bindgen-futures = "0.3.22"
